apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: wordsmith
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: api
  selector:
    app: api
#  clusterIP: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
#  replicas: 5
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
#          image: dockersamples/wordsmith-api
          image: me-west1-docker.pkg.dev/akiva-ashkenazi/docker-repo/api:latest
          ports:
            - containerPort: 8080
              name: api
          resources:
            requests:
              cpu: "100m"     # Set realistic resource requests
              memory: "128Mi"
            limits:
              cpu: "1"     # Set realistic resource limits
              memory: "1Gi"
          env:
            - name: INSTANCE_CONNECTION_NAME
              value: "akiva-ashkenazi:me-west1:words-postgresql-instance"
            - name: DB_HOST
              value: "127.0.0.1"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: "test"
            - name: DB_PASS
              value: "test"
            - name: DB_NAME
              value: "postgres"
#################BELOW IS THE PROXY ############################
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL Auth Proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.0
          args:
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "--private-ip"

            # Enable structured logging with LogEntry format:
            - "--structured-logs"


            # Replace DB_PORT with the port the proxy should listen on
            - "--port=5432"
            - "akiva-ashkenazi:me-west1:words-postgresql-instance"

            # [START cloud_sql_proxy_k8s_volume_mount]
            # This flag specifies where the service account key can be found
            - "--credentials-file=/secrets/service_account.json"
          securityContext:
            # The default Cloud SQL Auth Proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          volumeMounts:
            - name: my-secret
              mountPath: /secrets/
              readOnly: true
              # [END cloud_sql_proxy_k8s_volume_mount]
          # Resource configuration depends on an application's requirements. You
          # should adjust the following values based on what your application
          # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "256Mi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu:    "300m"
      # [START cloud_sql_proxy_k8s_volume_secret]
      volumes:
        - name: my-secret
          secret:
            secretName: my-gcp-credentials
      # [END cloud_sql_proxy_k8s_volume_secret]